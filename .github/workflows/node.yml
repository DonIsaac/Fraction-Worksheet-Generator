# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node CI

on:
  push:
    branches: [master]
    paths-ignore:
      - "*.md"
  pull_request:
    branches: [master]
    paths-ignore:
      - "*.md"

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x, 15.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v2

      # set up node
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      # cache node_modules
      - uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      # install dependencies
      - run: yarn --frozen

      # check for style violations
      - run: yarn lint

      # run TSC without outputting files or bundling. Type checking only
      - run: yarn typecheck
      - run: yarn build
      # - name: Upload test coverage
      #   uses: paambaati/codeclimate-action@v2.2.4

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js v14.x
        with:
          node-version: 14.x

      # cache node_modules
      - uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      # install dependencies
      - run: yarn --frozen

      # Test & publish coverage
      - name: Test & publish coverage to CodeClimate
        uses: paambaati/codeclimate-action@v2.7.5
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CODECLIMATE_REPORTER_ID }}
        with:
          coverageCommand: yarn test --coverage
          debug: true
        # Run test suite
      # - run: yarn test --coverage
